{"version":3,"sources":["features/home/HomePage.module.css","features/catalog/Catalog.module.css","app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckBoxButtons.tsx","app/components/AppPagination.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckBox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","ABoutPage","useState","validationErrors","setValidationErros","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","console","log","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","LoadingComponent","message","Backdrop","open","invisible","Box","display","justifyContent","alignItems","height","CircularProgress","size","color","sx","position","top","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","type","brand","CardActions","LoadingButton","loading","includes","component","Link","to","ProductCardSkeleton","Grid","item","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","value","TextField","label","onChange","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckBoxButtons","checked","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","Pagination","count","page","e","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","className","classes","noBorder","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","carouselImg","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","theme","createTheme","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","ThemeProvider","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckBox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","setCardState","cardComplete","setCardComplete","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","palette","background","default","hideProgressBar","CssBaseline","AboutPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.470f3d1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"carouselImg\":\"HomePage_carouselImg__22-VM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noBorder\":\"Catalog_noBorder__1g24S\"};","export interface MetaData {\r\n   currentPage: number;\r\n   totalPages: number;\r\n   pageSize: number;\r\n   totalCount: number;\r\n}\r\n\r\n//{\"currentPage\":1,\"totalPages\":1,\"pageSize\":6,\"totalCount\":4}\r\n\r\nexport class PaginatedResponse<T> {\r\n   items: T;\r\n   metaData: MetaData;\r\n\r\n   constructor(items: T, metaData: MetaData) {\r\n      this.items = items;\r\n      this.metaData = metaData;\r\n   }\r\n}","export function getCookie(key: string) {\r\n   const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n   return b ? b.pop() : \"\";\r\n }\r\n \r\n export function currencyFormat(amount: number) {\r\n   return '$' + (amount/100).toFixed(2);\r\n }","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\nexport interface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\r\n    'basket/addItemBasketItemAsync',\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void,\r\n    { productId: number, quantity: number, name?: string }>(\r\n        'basket/removeItemBasketItemAsync',\r\n        async ({ productId, quantity }, thunkAPI) => {\r\n            try {\r\n                await agent.Basket.removeItem(productId, quantity);\r\n            } catch (error: any) {\r\n                return thunkAPI.rejectWithValue({ error: error.data })\r\n            }\r\n        }\r\n    )\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = `pendingRemoveItem${action.meta.arg.productId}${action.meta.arg.name}`;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket?.items[itemIndex].quantity === 0) {\r\n                state.basket.items.splice(itemIndex, 1);\r\n            }\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(\r\n            addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled),\r\n            (state, action) => {\r\n                state.basket = action.payload;\r\n                state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(\r\n            addBasketItemAsync.rejected, fetchBasketAsync.rejected),\r\n            (state, action) => {\r\n                state.status = 'idle';\r\n        });\r\n    })\r\n})\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/User\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n   user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n   user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n   'account/signInUser',\r\n   async (data, thunkAPI) => {\r\n      try {\r\n         const userDto = await agent.Account.login(data);\r\n         const {basket, ...user} = userDto;\r\n         if (basket) thunkAPI.dispatch(setBasket(basket));\r\n         localStorage.setItem('user', JSON.stringify(user));\r\n         return user;\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data });\r\n      }\r\n   }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n   'account/fetchCurrentUser',\r\n   async (_, thunkAPI) => {\r\n      thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n      try {\r\n         const userDto = await agent.Account.currentUser();\r\n         const {basket, ...user} = userDto;\r\n         if (basket) thunkAPI.dispatch(setBasket(basket));\r\n         localStorage.setItem('user', JSON.stringify(user));\r\n         return user;\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data });\r\n      }\r\n   },\r\n   {\r\n      condition: () => {\r\n         if (!localStorage.getItem('user')) return false;\r\n      }\r\n   }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n   name: 'account',\r\n   initialState,\r\n   reducers: {\r\n      signOut: (state) => {\r\n         state.user = null;\r\n         localStorage.removeItem('user');\r\n         history.push('/');\r\n      },\r\n      setUser: (state, action) => {\r\n         state.user = action.payload;\r\n      }\r\n   },\r\n   extraReducers: (builder => {\r\n      builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n         state.user = null;\r\n         localStorage.removeItem('user');\r\n         toast.error('Session expired - please log in again');\r\n         history.push('/');\r\n      });\r\n      builder.addMatcher(isAnyOf(\r\n         signInUser.fulfilled,\r\n         fetchCurrentUser.fulfilled),\r\n         (state, action) => {\r\n            state.user = action.payload;\r\n         });\r\n      builder.addMatcher(isAnyOf(signInUser.rejected),\r\n         (state, action) => {\r\n            throw action.payload;\r\n         });\r\n   })\r\n})\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n   productsLoaded: boolean;\r\n   filtersLoaded: boolean;\r\n   status: string;\r\n   brands: string[];\r\n   types: string[];\r\n   productParams: ProductParams;\r\n   metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n   const params = new URLSearchParams();\r\n   params.append('pageNumber', productParams.pageNumber.toString());\r\n   params.append('pageSize', productParams.pageSize.toString());\r\n   params.append('orderBy', productParams.orderBy);\r\n\r\n   if (productParams.searchTerm) {\r\n      params.append('searchTerm', productParams.searchTerm);\r\n   }\r\n   if (productParams.brands.length > 0) {\r\n      params.append('brands', productParams.brands.toString());\r\n   }\r\n   if (productParams.types?.length > 0) {\r\n      params.append('types', productParams.types.toString());\r\n   }\r\n\r\n   return params;\r\n\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<\r\n   Product[], void, { state: RootState }>('catalog/fetchProductsAsync',\r\n      async (_, thunkAPI) => {\r\n         const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n         try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n         } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n         }\r\n      }\r\n   )\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n   'catalog/fetchProductAsync',\r\n   async (productId, thunkAPI) => {\r\n      try {\r\n         return await agent.Catalog.details(productId);\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data });\r\n      }\r\n   }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n   'catalog/fetchFilters',\r\n   async (_, thunkAPI) => {\r\n      try {\r\n         return agent.Catalog.fetchFilters();\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data })\r\n      }\r\n   }\r\n)\r\n\r\nfunction initParams() {\r\n   return {\r\n      pageNumber: 1,\r\n      pageSize: 6,\r\n      orderBy: 'name',\r\n      brands: [],\r\n      types: []\r\n   }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n   name: 'catalog',\r\n   initialState: productsAdapter.getInitialState<CatalogState>({\r\n      productsLoaded: false,\r\n      filtersLoaded: false,\r\n      status: 'idle',\r\n      brands: [],\r\n      types: [],\r\n      productParams: initParams(),\r\n      metaData: null\r\n   }),\r\n   reducers: {\r\n      setProductParams: (state, action) => {\r\n         state.productsLoaded = false;\r\n         state.productParams = {\r\n            ...state.productParams,\r\n            ...action.payload,\r\n            pageNumber: 1\r\n         };\r\n      },\r\n      setPageNumber: (state, action) => {\r\n         state.productsLoaded = false;\r\n         state.productParams = {...state.productParams, ...action.payload};\r\n     },\r\n      setMetaData: (state, action) => {\r\n         state.metaData = action.payload;\r\n      },\r\n      resetProductParams: (state) => {\r\n         state.productParams = initParams();\r\n      }\r\n   },\r\n   extraReducers: (builder => {\r\n      builder.addCase(fetchProductsAsync.pending, (state) => {\r\n         state.status = 'pendingFetchProducts';\r\n      });\r\n      builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n         productsAdapter.setAll(state, action.payload);\r\n         state.status = 'idle';\r\n         state.productsLoaded = true;\r\n      });\r\n      builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n         state.status = 'idle';\r\n      });\r\n\r\n      builder.addCase(fetchProductAsync.pending, (state) => {\r\n         state.status = 'pendingFetchProductAsync';\r\n      });\r\n      builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n         productsAdapter.upsertOne(state, action.payload);\r\n         state.status = 'idle';\r\n      });\r\n      builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n         state.status = 'idle';\r\n      });\r\n\r\n      builder.addCase(fetchFilters.pending, (state) => {\r\n         state.status = 'pendingFetchFilters';\r\n      });\r\n      builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n         state.brands = action.payload.brands;\r\n         state.types = action.payload.types;\r\n         state.filtersLoaded = true;\r\n         state.status = 'idle';\r\n      });\r\n      builder.addCase(fetchFilters.rejected, (state, action) => {\r\n         state.status = 'idle';\r\n      });\r\n   })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\nexport const {\r\n   setProductParams,\r\n   resetProductParams,\r\n   setPageNumber,\r\n   setMetaData\r\n} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface CounterState {\r\n   data: number;\r\n   title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n   data: 42,\r\n   title: 'YARC (Yet Another Redux  With Redux Toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n   name: 'counter',\r\n   initialState,\r\n   reducers: {\r\n       increment: (state, action) => {\r\n           state.data += action.payload\r\n       },\r\n       decrement: (state, action) => {\r\n           state.data -= action.payload\r\n       }\r\n   }\r\n})\r\n\r\nexport const {increment, decrement} = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\n\r\n// export function configureStore() {\r\n//    return createStore(counterReducer);\r\n// }\r\n\r\nexport const store = configureStore({\r\n   reducer: {\r\n      counter: counterSlice.reducer,\r\n      basket: basketSlice.reducer,\r\n      catalog: catalogSlice.reducer,\r\n      account: accountSlice.reducer\r\n   }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n        return response;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    // ! overrides type(script) safety\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: { error: data }\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('buggy/bad-requests'),\r\n    get401Error: () => requests.get('buggy/unauthorized'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error')\r\n}\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests\r\n        .post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests\r\n        .delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders', values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n}\r\n\r\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function ABoutPage() {\r\n    const [validationErrors, setValidationErros] = useState<string[]>([]);\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this'))\r\n            .catch(error => setValidationErros(error));\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>\r\n                Errors for testing purposes\r\n            </Typography><ButtonGroup fullWidth>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error()\r\n                .catch(error => console.log(error))}>\r\n                    Test 400 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error()\r\n                .catch(error => console.log(error))}>\r\n                    Test 401 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error()\r\n                    .catch(error => console.log(error))}>\r\n                    Test 404 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error()\r\n                   .catch(error => console.log(error))}>\r\n                    Test 500 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={getValidationError}>\r\n                    Test Validation Error\r\n                </Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    )\r\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\r\nimport Box from \"@mui/system/Box\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}","import {\r\n    Card, Button, CardActions, CardContent, CardMedia,\r\n    Typography, CardHeader, Avatar\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Link } from \"react-router-dom\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\">\r\n                    {currencyFormat(product.price)} / {product.type}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\r\n                    size=\"small\"\r\n                >\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n   Card,\r\n   CardActions,\r\n   CardContent,\r\n   CardHeader,\r\n   Grid,\r\n   Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n   return (\r\n       <Grid item xs component={Card}>\r\n           <CardHeader\r\n               avatar={\r\n                   <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n               }\r\n               title={\r\n                   <Skeleton\r\n                       animation=\"wave\"\r\n                       height={10}\r\n                       width=\"80%\"\r\n                       style={{ marginBottom: 6 }}\r\n                   />\r\n               }\r\n           />\r\n           <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n           <CardContent>\r\n               <>\r\n                   <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                   <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n               </>\r\n           </CardContent>\r\n           <CardActions>\r\n               <>\r\n                   <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                   <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n               </>\r\n           </CardActions>\r\n       </Grid>\r\n   )\r\n}","import { Grid } from \"@mui/material\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\"\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const {productsLoaded} = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid key={product.id} item xs={4}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : <ProductCard product={product} />}\r\n                    \r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n   const {productParams} = useAppSelector(state => state.catalog);\r\n   const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n   const dispatch = useAppDispatch();\r\n\r\n   const debouncedSearch = debounce((event: any) =>{\r\n      dispatch(setProductParams({searchTerm: event.target.value}));\r\n   }, 1000)\r\n   return (\r\n      <TextField\r\n         label='Search products'\r\n         variant='outlined'\r\n         fullWidth\r\n         value={searchTerm || ''}\r\n         onChange={(event: any) => {\r\n            setSearchTerm(event.target.value);\r\n            debouncedSearch(event);\r\n         }}\r\n      />\r\n   );\r\n\r\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props {\r\n   options: any[];\r\n   onChange: (event: any) => void;\r\n   selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\r\n   return (\r\n      <FormControl component=\"fieldset\">\r\n         <RadioGroup onChange={onChange} value={selectedValue}>\r\n            {options.map(({ value, label }) => (\r\n               <FormControlLabel\r\n                  key={value} value={value}\r\n                  control={<Radio />} label={label}\r\n               />\r\n            ))}\r\n         </RadioGroup>\r\n      </FormControl>\r\n   )\r\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n   items: string[];\r\n   checked?: string[];\r\n   onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckBoxButtons({ items, checked, onChange }: Props) {\r\n   const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n   function handleChecked(value: string) {\r\n      const currentIndex = checkedItems.findIndex(item => item === value);\r\n      let newChecked: string[] = [];\r\n      if (currentIndex === - 1) newChecked = [...checkedItems, value];\r\n      else newChecked = checkedItems.filter(item => item !== value);\r\n      setCheckedItems(newChecked);\r\n      onChange(newChecked);\r\n   }\r\n   return (\r\n      <FormGroup>\r\n         {items.map(item => (\r\n            <FormControlLabel\r\n               control={<Checkbox\r\n                  checked={checkedItems.indexOf(item) !== -1}\r\n                  onClick={() => handleChecked(item)}\r\n               />}\r\n               label={item} key={item}\r\n            />\r\n         ))}\r\n      </FormGroup>\r\n   )\r\n}","import { Box, Typography, Pagination } from \"@mui/material\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n   metaData: MetaData;\r\n   onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props) {\r\n   const {currentPage, totalCount, totalPages, pageSize} = metaData;\r\n   return (\r\n      <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n          <Typography>\r\n            Displaying {(currentPage - 1) * pageSize + 1}-\r\n            {currentPage * pageSize > totalCount \r\n               ? totalCount \r\n               : currentPage * pageSize} of {totalCount} items\r\n          </Typography>\r\n          <Pagination\r\n            color='secondary'\r\n            size='large'\r\n            count={totalPages}\r\n            page={currentPage}\r\n            onChange={(e, page) => onPageChange(page)}\r\n          />\r\n        </Box>\r\n   )\r\n}","import {\r\n  Grid, Paper} from \"@mui/material\";\r\nimport classes from './Catalog.module.css';\r\nimport { useEffect } from \"react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport {\r\n  fetchFilters, fetchProductsAsync,\r\n  productSelectors, setPageNumber, setProductParams\r\n} from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport CheckBoxButtons from \"../../app/components/CheckBoxButtons\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\n\r\nconst sortOptions = [\r\n  { value: 'name', label: 'Alphabetical' },\r\n  { value: 'priceDesc', label: 'Price - High to low' },\r\n  { value: 'price', label: 'Price - Low to high' }\r\n]\r\n\r\nexport default function Catalog() {\r\n  const products = useAppSelector(productSelectors.selectAll);\r\n  const { productsLoaded, filtersLoaded,\r\n    brands, types, productParams, metaData\r\n  } = useAppSelector(state => state.catalog);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!productsLoaded) dispatch(fetchProductsAsync());\r\n  }, [productsLoaded, dispatch]);\r\n  // If prodsLoaded and filtersLoaded in the same useEffect = BAD. Means prods\r\n  // ...are fetched, which changes the dependency productsLoaded, which fires\r\n  // ...off another useEffect, and therefore products loaded again, along with...\r\n  // ...the filters. Therefore have to move filters fetching to it's own useEffect\r\n  useEffect(() => {\r\n    if (!filtersLoaded) dispatch(fetchFilters());\r\n  }, [dispatch, filtersLoaded]);\r\n\r\n  if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n\r\n  return (\r\n    <Grid container columnSpacing={4}>\r\n      <Grid item xs={3}>\r\n        <Paper sx={{ mb: 2 }}>\r\n          <ProductSearch />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <RadioButtonGroup\r\n            selectedValue={productParams.orderBy}\r\n            options={sortOptions}\r\n            onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n          />\r\n\r\n          <Paper sx={{ mb: 2, p: 2 }} className={classes.noBorder}>\r\n            <CheckBoxButtons\r\n              items={brands}\r\n              checked={productParams.brands}\r\n              onChange={(items: string[]) => dispatch(setProductParams({\r\n                brands: items\r\n              }))}\r\n            />\r\n          </Paper>\r\n          <Paper sx={{ mb: 2, p: 2 }} className={classes.noBorder}>\r\n            <CheckBoxButtons\r\n              items={types}\r\n              checked={productParams.types}\r\n              onChange={(items: string[]) => dispatch(setProductParams({\r\n                types: items\r\n              }))}\r\n            />\r\n          </Paper>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <ProductList products={products} />\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n      <Grid item xs={9} sx={{ mb: 2 }}>\r\n        {metaData &&\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) => dispatch(setPageNumber({\r\n              pageNumber: page\r\n            }))}\r\n          />\r\n        }\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import { Container, Paper, Typography, Divider, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography variant='h3' gutterBottom>\r\n                OOps - we could not find find what you are looking for\r\n            </Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n    }","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{ id: string }>();\r\n    \r\n    const product = useAppSelector(state => productSelectors.selectById( state, id));\r\n    const {status: productStatus} = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)));\r\n    }, [id, item, dispatch, product]);\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(parseInt(event.target.value));\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}));\r\n            \r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}));\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\r\n    if (!product) return <NotFound />\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>\r\n                    {product.name}\r\n                </Typography>\r\n                <Divider sx={{mb: 2}}/>\r\n                <Typography variant='h4' color='secondary'>\r\n                    ${(product.price / 100).toFixed(2)}\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={(item?.quantity === quantity) || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{height: '55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Cart'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const { data, title } = useAppSelector(state => state.counter);\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>\r\n                {title}\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n                The data is: {data}\r\n            </Typography>\r\n            <ButtonGroup>\r\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>\r\n                    Decrement\r\n                </Button>\r\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>\r\n                    Increment\r\n                </Button>\r\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>\r\n                    Increment by 5\r\n                </Button>\r\n            </ButtonGroup>\r\n        </>\r\n    )\r\n}","import { Box, Typography } from \"@mui/material\";\r\nimport Slider from \"react-slick\";\r\nimport classes from './HomePage.module.css';\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"images/hero1.jpg\" alt=\"hero\" className={classes.carouselImg} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero2.jpg\" alt=\"hero\" className={classes.carouselImg} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero3.jpg\" alt=\"hero\" className={classes.carouselImg} />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }} >\r\n                <Typography variant='h1'>Welcome to the store</Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"../../features/account/accountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\n\r\nexport default function SignedInMenu() {\r\n   const dispatch = useAppDispatch();\r\n   const { user } = useAppSelector(state => state.account);\r\n\r\n   const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n   const open = Boolean(anchorEl);\r\n   const handleClick = (event: any) => {\r\n      setAnchorEl(event.currentTarget);\r\n   };\r\n   const handleClose = () => {\r\n      setAnchorEl(null);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Button\r\n            color='inherit'\r\n            onClick={handleClick}\r\n            sx={{ typography: 'h6' }}\r\n         >\r\n            {user?.email}\r\n         </Button>\r\n         <Menu\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={Fade}\r\n         >\r\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem component={Link} to='/orders' onClick={handleClose}>\r\n               My orders\r\n            </MenuItem>\r\n            <MenuItem onClick={() => {\r\n               dispatch(signOut());\r\n               dispatch(clearBasket());\r\n            }}>Logout</MenuItem>\r\n         </Menu>\r\n      </>\r\n   );\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Typography\r\n                        variant='h6' component={NavLink}\r\n                        to='/'\r\n                        exact\r\n                        sx={navStyles}\r\n                    >\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }} >\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const {state} = useLocation<any>();\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                <Divider />              \r\n                <Typography>{state.error.detail || 'Internal Server Error'}</Typography>                \r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({subtotal}: Props) {\r\n   const {basket} = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n       subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) || 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n   items: BasketItem[];\r\n   isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n   const { status } = useAppSelector(state => state.basket);\r\n   const dispatch = useAppDispatch();\r\n   return (\r\n      <TableContainer component={Paper} variant={'outlined'}>\r\n         <Table sx={{ minWidth: 650 }}>\r\n            <TableHead>\r\n               <TableRow>\r\n                  <TableCell>Product</TableCell>\r\n                  <TableCell align=\"right\">Price</TableCell>\r\n                  <TableCell align=\"center\">Quantity</TableCell>\r\n                  <TableCell align=\"right\">Subtotal</TableCell>\r\n                  {isBasket && <TableCell align=\"right\"></TableCell>}\r\n               </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n               {items.map(item => (\r\n                  <TableRow\r\n                     key={item.productId}\r\n                     sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                     <TableCell component=\"th\" scope=\"row\">\r\n                        <Box display='flex' align-items='center'>\r\n                           <img\r\n                              src={item.pictureUrl} alt={item.name}\r\n                              style={{ height: 50, marginRight: 20 }}\r\n                           />\r\n                           <span>{item.name}</span>\r\n                        </Box>\r\n\r\n                     </TableCell>\r\n                     <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                     <TableCell align=\"center\">\r\n                        {isBasket &&\r\n                           <LoadingButton\r\n                              loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                              onClick={() => dispatch(removeBasketItemAsync({\r\n                                 productId: item.productId, quantity: 1, name: 'rem'\r\n                              }))}\r\n                              color='error'\r\n                           >\r\n                              <Remove />\r\n                           </LoadingButton>\r\n                        }\r\n                        {item.quantity}\r\n                        {isBasket && <LoadingButton\r\n                           loading={status === 'pendingAddItem' + item.productId}\r\n                           onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                           color='secondary'\r\n                        >\r\n                           <Add />\r\n                        </LoadingButton>}\r\n                     </TableCell>\r\n                     <TableCell align=\"right\">\r\n                        ${((item.price / 100) * item.quantity).toFixed(2)}\r\n                     </TableCell>\r\n                     {isBasket &&\r\n                        <TableCell align=\"right\">\r\n                           <LoadingButton\r\n                              loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                              onClick={() => dispatch(removeBasketItemAsync({\r\n                                 productId: item.productId, quantity: item.quantity, name: 'del'\r\n                              }))}\r\n                              color='error'\r\n                           >\r\n                              <Delete />\r\n                           </LoadingButton>\r\n                        </TableCell>}\r\n                  </TableRow>\r\n               ))}\r\n            </TableBody>\r\n         </Table>\r\n      </TableContainer>\r\n   )\r\n}","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Link } from 'react-router-dom'\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nexport default function BasketPage() {\r\n   const { basket } = useAppSelector(state => state.basket);\r\n\r\n   if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n   return (\r\n      <>\r\n         <BasketTable items={basket.items} />\r\n         <Grid container>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={6}>\r\n               <BasketSummary />\r\n               <Button\r\n                  component={Link}\r\n                  to='/checkout'\r\n                  variant='contained'\r\n                  size='large'\r\n                  fullWidth\r\n               >\r\n                  Checkout\r\n               </Button>\r\n            </Grid>\r\n         </Grid>\r\n      </>\r\n   )\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login() {\r\n   const history = useHistory();\r\n   const location = useLocation<any>();\r\n   const dispatch = useAppDispatch();\r\n\r\n   const { register, handleSubmit, formState: { \r\n      isSubmitting, errors, isValid\r\n   }} = useForm({mode: 'all'});\r\n\r\n   async function submitForm(data: FieldValues) {\r\n      try {\r\n         await dispatch(signInUser(data)); \r\n         history.push(location.state?.from?.pathname || '/catalog');         \r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n      \r\n   }\r\n\r\n   return (\r\n      <ThemeProvider theme={theme}>\r\n         <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{\r\n               display: 'flex', flexDirection: 'column',\r\n               alignItems: 'center', p: 4\r\n            }}\r\n         >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n               <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n               Sign in\r\n            </Typography>\r\n            <Box\r\n               component=\"form\"\r\n               onSubmit={handleSubmit(submitForm)}\r\n               noValidate sx={{ mt: 1 }}\r\n            >\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  autoFocus\r\n                  {...register('username', {\r\n                     required: 'Username is required'\r\n                  })}\r\n                  error={!!errors.username} // !! casts to Boolean\r\n                  helperText={errors?.username?.message}\r\n               />\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  {...register('password', {\r\n                     required: 'Password is required'\r\n                  })}\r\n                  // replaces name=\"password\", but does more...\r\n                  // ...onChange, see react-hook-form docs\r\n                  error={!!errors.password} // !! casts to Boolean\r\n                  helperText={errors?.password?.message}\r\n               />\r\n               <LoadingButton\r\n                  disabled={!isValid}\r\n                  loading={isSubmitting}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n               >\r\n                  Sign In\r\n               </LoadingButton>\r\n               <Grid container>\r\n                  <Grid item>\r\n                     <Link to='/register'>\r\n                        {\"Don't have an account? Sign Up\"}\r\n                     </Link>\r\n                  </Grid>\r\n               </Grid>\r\n            </Box>\r\n         </Container>\r\n      </ThemeProvider>\r\n   );\r\n}\r\n","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Register() {\r\n   const history = useHistory();\r\n   const { register, handleSubmit, setError, formState: {\r\n      isSubmitting, errors, isValid\r\n   } } = useForm({ mode: 'all' });\r\n\r\n   function handleApiErrors(errors: any) {\r\n      if (errors) {\r\n         errors.forEach((error: string) => {\r\n            if (error.includes('Password')) {\r\n               setError('password', {message: error});\r\n            } else if (error.includes('Email')) {\r\n               setError('email', {message: error});\r\n            } else if (error.includes('Username')) {\r\n               setError('username', {message: error});\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   return (\r\n      <ThemeProvider theme={theme}>\r\n         <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{\r\n               display: 'flex', flexDirection: 'column',\r\n               alignItems: 'center', p: 4\r\n            }}\r\n         >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n               <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n               Register\r\n            </Typography>\r\n            <Box\r\n               component=\"form\"\r\n               onSubmit={handleSubmit((data) =>\r\n                  agent.Account.register(data)\r\n                     .then(() => {\r\n                        toast.success('Registration successful - you can now log in');\r\n                        history.push('/login')\r\n                     })\r\n                     .catch((error => handleApiErrors(error))))\r\n               }\r\n               noValidate sx={{ mt: 1 }}\r\n            >\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  autoFocus\r\n                  {...register('username', {\r\n                     required: 'Username is required'\r\n                  })}\r\n                  error={!!errors.username} // !! casts to Boolean\r\n                  helperText={errors?.username?.message}\r\n               />\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  {...register('email', {\r\n                     required: 'Email is required',\r\n                     pattern: {\r\n                        value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                        message: 'Not a valid email address'\r\n                     }\r\n                  })}\r\n                  error={!!errors.email}\r\n                  helperText={errors?.email?.message}\r\n               />\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  {...register('password', {\r\n                     required: 'Password is required',\r\n                     pattern: {\r\n                        value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                        message: 'This password does not meet complexity requirements'\r\n                     }\r\n                  })}\r\n                  error={!!errors.password}\r\n                  helperText={errors?.password?.message}\r\n               />\r\n               <LoadingButton\r\n                  disabled={!isValid}\r\n                  loading={isSubmitting}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n               >\r\n                  Register\r\n               </LoadingButton>\r\n               <Grid container>\r\n                  <Grid item>\r\n                     <Link to='/login'>\r\n                        {\"Already have an account? Sign In\"}\r\n                     </Link>\r\n                  </Grid>\r\n               </Grid>\r\n            </Box>\r\n         </Container>\r\n      </ThemeProvider>\r\n   );\r\n}\r\n","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n   component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n   const { user } = useAppSelector(state => state.account);\r\n   return (\r\n      <Route {...rest} render={props =>\r\n         user ? (\r\n            <Component {...props} />\r\n         ) : (\r\n            <Redirect\r\n               to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: props.location }\r\n               }}\r\n            />\r\n         )\r\n      }\r\n      />\r\n   );\r\n}\r\n","import { Box, Button, Grid, Typography } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n   order: Order;\r\n   setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n   const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n   return (\r\n      <>\r\n         <Box display='flex' justifyContent='space-between'>\r\n            <Typography sx={{ p: 2 }} gutterBottom variant='h4'>\r\n               Order# {order.id} - {order.orderStatus}\r\n            </Typography>\r\n            <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }}\r\n               size='large' variant='contained'\r\n            >\r\n               Back to orders\r\n            </Button>\r\n         </Box>\r\n         <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n         <Grid container>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={6}>\r\n               <BasketSummary subtotal={subtotal} />\r\n            </Grid>\r\n         </Grid>\r\n      </>\r\n   )\r\n}","import {\r\n   TableContainer, Paper, Table, TableHead,\r\n   TableRow, TableCell, TableBody, Button\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n   const [orders, setOrders] = useState<Order[] | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      agent.Orders.list()\r\n         .then(orders => setOrders(orders))\r\n         .catch(error => console.log(error))\r\n         .finally(() => setLoading(false))\r\n   }, [])\r\n\r\n   if (loading) return <LoadingComponent message='Loading orders...' />\r\n\r\n   if (selectedOrderNumber > 0) return (\r\n      <OrderDetailed \r\n          order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n          setSelectedOrder={setSelectedOrderNumber}\r\n      />\r\n  )\r\n\r\n   return (\r\n      <TableContainer component={Paper}>\r\n         <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n               <TableRow>\r\n                  <TableCell>OrderNumber</TableCell>\r\n                  <TableCell align=\"right\">Total</TableCell>\r\n                  <TableCell align=\"right\">Order Date</TableCell>\r\n                  <TableCell align=\"right\">Order Status</TableCell>\r\n                  <TableCell align=\"right\"></TableCell>\r\n               </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n               {orders?.map((order) => (\r\n                  <TableRow\r\n                     key={order.id}\r\n                     sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                     <TableCell component=\"th\" scope=\"row\">\r\n                        {order.id}\r\n                     </TableCell>\r\n                     <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                     <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                     <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                     <TableCell align=\"right\">\r\n                     <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                           View\r\n                        </Button>\r\n                     </TableCell>\r\n                  </TableRow>\r\n               ))}\r\n            </TableBody>\r\n         </Table>\r\n      </TableContainer>\r\n   )\r\n}","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n   label: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n   const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n   return (\r\n      <TextField\r\n         {...props}\r\n         {...field}\r\n         fullWidth\r\n         variant='outlined'\r\n         error={!!fieldState.error}\r\n         helperText={fieldState.error?.message}\r\n      />\r\n   )\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n   label: string;\r\n   disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckBox(props: Props) {\r\n   const { field } = useController({ ...props, defaultValue: false });\r\n   return (\r\n      <FormControlLabel\r\n         control={\r\n            <Checkbox\r\n               {...field}\r\n               checked={field.value}\r\n               color='secondary'\r\n               disabled={props.disabled}\r\n            />\r\n\r\n         }\r\n         label={props.label}\r\n      />\r\n   )\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport AppCheckBox from '../../app/components/AppCheckBox';\r\n\r\nexport default function AddressForm() {\r\n  const { control, formState } = useFormContext();\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <AppTextInput control={control} name='fullName' label='Full name' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address1' label='Address 1' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address2' label='Address 2' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='city' label='City' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='state' label='State' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='zip' label='Zipcode' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='country' label='Country' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppCheckBox \r\n            disabled={!formState.isDirty}\r\n            name='saveAddress' \r\n            label='Save this as the default address'\r\n            control={control}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({\r\n   component: Component, ...props }: Props,\r\n   ref: Ref<unknown>) {\r\n   const elementRef = useRef<any>();\r\n\r\n   useImperativeHandle(ref, () => ({\r\n      focus: () => elementRef.current.focus\r\n   }));\r\n\r\n   return (\r\n      <Component\r\n         onReady={(element: any) => elementRef.current = element}\r\n         {...props}\r\n      />\r\n   )\r\n});","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { StripeInput } from './StripeInput';\r\nimport {\r\n  CardCvcElement, CardExpiryElement, CardNumberElement\r\n} from '@stripe/react-stripe-js';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: { elementError: { [key in StripeElementType]?: string } };\r\n  onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector(state => state.basket);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n        <BasketTable items={basket.items} isBasket={false} />\r\n      }\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n   yup.object({\r\n      fullName: yup.string().required('Full name is required'),\r\n      address1: yup.string().required('Address line 1 is required'),\r\n      address2: yup.string().required('Address line 2 is required'),\r\n      city: yup.string().required('City is a required field'),\r\n      state: yup.string().required('State is a required field'),\r\n      zip: yup.string().required('Zip is a required field'),\r\n      country: yup.string().required('Country is a required field')\r\n   }),\r\n   yup.object(),\r\n   yup.object({\r\n      nameOnCard: yup.string().required()\r\n   })\r\n]\r\n","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [cardState, setCardState] = useState<{\r\n        elementError: { [key in StripeElementType]?: string }\r\n    }>({ elementError: {} });\r\n    // Flagging card input as complete (legal card number etc.)\r\n    const [cardComplete, setCardComplete] = useState<any>({\r\n        cardNumber: false, cardExpiry: false, cardCvc: false\r\n    });\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        });\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({\r\n                        ...methods.getValues(),\r\n                        ...response,\r\n                        saveAddress: false\r\n                    })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // means Stripe is not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({\r\n                    saveAddress, shippingAddress\r\n                });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid;\r\n        } else {\r\n            return !methods.formState.isValid;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack}>\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe('pk_test_51LrekCGJ0Cgm8vTrGQgWn8zYDBcnqySqxgjcPKzKRbuQU6uqpjVwzRec2u4NVSPP0APVfwvr248AVNuBGcWOu4hH00yhe71IL8');\r\n\r\nexport default function CheckoutWrapper() {\r\n   const dispatch = useAppDispatch();\r\n   const [loading, setLoading] = useState(true);\r\n\r\n   useEffect(() => {\r\n      agent.Payments.createPaymentIntent()\r\n         .then(basket => dispatch(setBasket(basket)))\r\n         .catch(error => console.log(error))\r\n         .finally(() => setLoading(false))\r\n   }, [dispatch]);\r\n\r\n   if (loading) return <LoadingComponent message='Loading checkout...' />\r\n\r\n   return (\r\n      <Elements stripe={stripePromise}>\r\n         <CheckoutPage />\r\n      </Elements>\r\n   )\r\n}","import { Container, createTheme, CssBaseline } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AboutPage from \"../../features/about/AboutPage\";\r\nimport Catalog from \"../../features/catalog/Catalog\";\r\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\r\nimport ContactPage from \"../../features/contact/ContactPage\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport Header from \"./Header\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ServerError from \"../errors/ServerError\";\r\nimport NotFound from \"../errors/NotFound\";\r\nimport BasketPage from \"../../features/basket/BasketPage\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport { useAppDispatch } from \"../store/configureStore\";\r\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\r\nimport Login from \"../../features/account/Login\";\r\nimport Register from \"../../features/account/Register\";\r\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Orders from \"../../features/orders/Orders\";\r\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const initApp = useCallback(async () => {\r\n    try {\r\n      await dispatch(fetchCurrentUser());\r\n      await dispatch(fetchBasketAsync());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    initApp().then(() => setLoading(false));\r\n  }, [initApp])\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const paletteType = darkMode ? 'dark' : 'light';\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: paletteType,\r\n      background: {\r\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\r\n      }\r\n    }\r\n  })\r\n\r\n  function handleThemeChange() {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  if (loading) return <LoadingComponent message='Initialising app...' />\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <CssBaseline />\r\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\r\n      <Route exact path='/' component={HomePage} />\r\n      {/* Below, a Route taking a regular expression, to evaluate paths */}\r\n      <Route path={'/(.+)'} render={() => (\r\n        <Container sx={{ mt: 4 }}>\r\n          <Switch>\r\n            <Route exact path='/catalog' component={Catalog} />\r\n            <Route path='/catalog/:id' component={ProductDetails} />\r\n            <Route path='/about' component={AboutPage} />\r\n            <Route path='/contact' component={ContactPage} />\r\n            <Route path='/server-error' component={ServerError} />\r\n            <Route path='/basket' component={BasketPage} />\r\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\r\n            <PrivateRoute path='/orders' component={Orders} />\r\n            <Route path='/login' component={Login} />\r\n            <Route path='/register' component={Register} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Container>\r\n      )\r\n      } />\r\n\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css'\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { store } from './app/store/configureStore';\r\nimport { Provider } from 'react-redux';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n"],"sourceRoot":""}