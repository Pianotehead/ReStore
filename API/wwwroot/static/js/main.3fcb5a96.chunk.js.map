{"version":3,"sources":["features/home/HomePage.module.css","features/catalog/Catalog.module.css","app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckBoxButtons.tsx","app/components/AppPagination.tsx","app/hooks/useProducts.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckBox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropzone.tsx","app/components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","roles","atob","token","split","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","put","createFormData","item","formData","FormData","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","ABoutPage","useState","validationErrors","setValidationErros","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","console","log","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","LoadingComponent","message","Backdrop","open","invisible","Box","display","justifyContent","alignItems","height","CircularProgress","size","color","sx","position","top","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","type","brand","CardActions","LoadingButton","loading","includes","component","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","value","TextField","label","onChange","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckBoxButtons","checked","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","Pagination","count","page","e","handlePageChange","useProducts","selectAll","useEffect","sortOptions","columnSpacing","Paper","mb","p","className","classes","noBorder","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","carouselImg","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","theme","createTheme","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","ThemeProvider","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckBox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","setCardState","cardComplete","setCardComplete","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","maxHeight","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","palette","background","default","hideProgressBar","CssBaseline","AboutPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3fcb5a96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"carouselImg\":\"HomePage_carouselImg__22-VM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noBorder\":\"Catalog_noBorder__1g24S\"};","export interface MetaData {\r\n   currentPage: number;\r\n   totalPages: number;\r\n   pageSize: number;\r\n   totalCount: number;\r\n}\r\n\r\n//{\"currentPage\":1,\"totalPages\":1,\"pageSize\":6,\"totalCount\":4}\r\n\r\nexport class PaginatedResponse<T> {\r\n   items: T;\r\n   metaData: MetaData;\r\n\r\n   constructor(items: T, metaData: MetaData) {\r\n      this.items = items;\r\n      this.metaData = metaData;\r\n   }\r\n}","export function getCookie(key: string) {\r\n   const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n   return b ? b.pop() : \"\";\r\n }\r\n \r\n export function currencyFormat(amount: number) {\r\n   return '$' + (amount/100).toFixed(2);\r\n }","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\nexport interface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\r\n    'basket/addItemBasketItemAsync',\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void,\r\n    { productId: number, quantity: number, name?: string }>(\r\n        'basket/removeItemBasketItemAsync',\r\n        async ({ productId, quantity }, thunkAPI) => {\r\n            try {\r\n                await agent.Basket.removeItem(productId, quantity);\r\n            } catch (error: any) {\r\n                return thunkAPI.rejectWithValue({ error: error.data })\r\n            }\r\n        }\r\n    )\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = `pendingRemoveItem${action.meta.arg.productId}${action.meta.arg.name}`;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket?.items[itemIndex].quantity === 0) {\r\n                state.basket.items.splice(itemIndex, 1);\r\n            }\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(\r\n            addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled),\r\n            (state, action) => {\r\n                state.basket = action.payload;\r\n                state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(\r\n            addBasketItemAsync.rejected, fetchBasketAsync.rejected),\r\n            (state, action) => {\r\n                state.status = 'idle';\r\n        });\r\n    })\r\n})\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n   user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n   user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n   'account/signInUser',\r\n   async (data, thunkAPI) => {\r\n      try {\r\n         const userDto = await agent.Account.login(data);\r\n         const {basket, ...user} = userDto;\r\n         if (basket) thunkAPI.dispatch(setBasket(basket));\r\n         localStorage.setItem('user', JSON.stringify(user));\r\n         return user;\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data });\r\n      }\r\n   }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n   'account/fetchCurrentUser',\r\n   async (_, thunkAPI) => {\r\n      thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n      try {\r\n         const userDto = await agent.Account.currentUser();\r\n         const {basket, ...user} = userDto;\r\n         if (basket) thunkAPI.dispatch(setBasket(basket));\r\n         localStorage.setItem('user', JSON.stringify(user));\r\n         return user;\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data });\r\n      }\r\n   },\r\n   {\r\n      condition: () => {\r\n         if (!localStorage.getItem('user')) return false;\r\n      }\r\n   }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n   name: 'account',\r\n   initialState,\r\n   reducers: {\r\n      signOut: (state) => {\r\n         state.user = null;\r\n         localStorage.removeItem('user');\r\n         history.push('/');\r\n      },\r\n      setUser: (state, action) => {\r\n         let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n         let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n         state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles};\r\n     }\r\n   },\r\n   extraReducers: (builder => {\r\n      builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n         state.user = null;\r\n         localStorage.removeItem('user');\r\n         toast.error('Session expired - please log in again');\r\n         history.push('/');\r\n      });\r\n      builder.addMatcher(isAnyOf(\r\n         signInUser.fulfilled,\r\n         fetchCurrentUser.fulfilled),\r\n         (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n            state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles};\r\n         });\r\n      builder.addMatcher(isAnyOf(signInUser.rejected),\r\n         (state, action) => {\r\n            throw action.payload;\r\n         });\r\n   })\r\n})\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n   productsLoaded: boolean;\r\n   filtersLoaded: boolean;\r\n   status: string;\r\n   brands: string[];\r\n   types: string[];\r\n   productParams: ProductParams;\r\n   metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n   const params = new URLSearchParams();\r\n   params.append('pageNumber', productParams.pageNumber.toString());\r\n   params.append('pageSize', productParams.pageSize.toString());\r\n   params.append('orderBy', productParams.orderBy);\r\n\r\n   if (productParams.searchTerm) {\r\n      params.append('searchTerm', productParams.searchTerm);\r\n   }\r\n   if (productParams.brands.length > 0) {\r\n      params.append('brands', productParams.brands.toString());\r\n   }\r\n   if (productParams.types?.length > 0) {\r\n      params.append('types', productParams.types.toString());\r\n   }\r\n\r\n   return params;\r\n\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<\r\n   Product[], void, { state: RootState }>('catalog/fetchProductsAsync',\r\n      async (_, thunkAPI) => {\r\n         const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n         try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n         } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n         }\r\n      }\r\n   )\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n   'catalog/fetchProductAsync',\r\n   async (productId, thunkAPI) => {\r\n      try {\r\n         return await agent.Catalog.details(productId);\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data });\r\n      }\r\n   }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n   'catalog/fetchFilters',\r\n   async (_, thunkAPI) => {\r\n      try {\r\n         return agent.Catalog.fetchFilters();\r\n      } catch (error: any) {\r\n         return thunkAPI.rejectWithValue({ error: error.data })\r\n      }\r\n   }\r\n)\r\n\r\nfunction initParams() {\r\n   return {\r\n      pageNumber: 1,\r\n      pageSize: 6,\r\n      orderBy: 'name',\r\n      brands: [],\r\n      types: []\r\n   }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n   name: 'catalog',\r\n   initialState: productsAdapter.getInitialState<CatalogState>({\r\n      productsLoaded: false,\r\n      filtersLoaded: false,\r\n      status: 'idle',\r\n      brands: [],\r\n      types: [],\r\n      productParams: initParams(),\r\n      metaData: null\r\n   }),\r\n   reducers: {\r\n      setProductParams: (state, action) => {\r\n         state.productsLoaded = false;\r\n         state.productParams = {\r\n            ...state.productParams,\r\n            ...action.payload,\r\n            pageNumber: 1\r\n         };\r\n      },\r\n      setPageNumber: (state, action) => {\r\n         state.productsLoaded = false;\r\n         state.productParams = {...state.productParams, ...action.payload};\r\n     },\r\n      setMetaData: (state, action) => {\r\n         state.metaData = action.payload;\r\n      },\r\n      resetProductParams: (state) => {\r\n         state.productParams = initParams();\r\n      },\r\n      setProduct: (state, action) => {\r\n         productsAdapter.upsertOne(state, action.payload);\r\n         state.productsLoaded = false;\r\n     },\r\n     removeProduct: (state, action) => {\r\n         productsAdapter.removeOne(state, action.payload);\r\n         state.productsLoaded = false;\r\n     }\r\n   },\r\n   extraReducers: (builder => {\r\n      builder.addCase(fetchProductsAsync.pending, (state) => {\r\n         state.status = 'pendingFetchProducts';\r\n      });\r\n      builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n         productsAdapter.setAll(state, action.payload);\r\n         state.status = 'idle';\r\n         state.productsLoaded = true;\r\n      });\r\n      builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n         state.status = 'idle';\r\n      });\r\n\r\n      builder.addCase(fetchProductAsync.pending, (state) => {\r\n         state.status = 'pendingFetchProductAsync';\r\n      });\r\n      builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n         productsAdapter.upsertOne(state, action.payload);\r\n         state.status = 'idle';\r\n      });\r\n      builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n         state.status = 'idle';\r\n      });\r\n\r\n      builder.addCase(fetchFilters.pending, (state) => {\r\n         state.status = 'pendingFetchFilters';\r\n      });\r\n      builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n         state.brands = action.payload.brands;\r\n         state.types = action.payload.types;\r\n         state.filtersLoaded = true;\r\n         state.status = 'idle';\r\n      });\r\n      builder.addCase(fetchFilters.rejected, (state, action) => {\r\n         state.status = 'idle';\r\n      });\r\n   })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\nexport const {\r\n   setProductParams,\r\n   resetProductParams,\r\n   setPageNumber,\r\n   setMetaData,\r\n   setProduct,\r\n   removeProduct\r\n} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface CounterState {\r\n   data: number;\r\n   title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n   data: 42,\r\n   title: 'YARC (Yet Another Redux  With Redux Toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n   name: 'counter',\r\n   initialState,\r\n   reducers: {\r\n       increment: (state, action) => {\r\n           state.data += action.payload\r\n       },\r\n       decrement: (state, action) => {\r\n           state.data -= action.payload\r\n       }\r\n   }\r\n})\r\n\r\nexport const {increment, decrement} = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\n\r\n// export function configureStore() {\r\n//    return createStore(counterReducer);\r\n// }\r\n\r\nexport const store = configureStore({\r\n   reducer: {\r\n      counter: counterSlice.reducer,\r\n      basket: basketSlice.reducer,\r\n      catalog: catalogSlice.reducer,\r\n      account: accountSlice.reducer\r\n   }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n        return response;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 403:\r\n            toast.error('You are not allowed to do that!');\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: {error: data}\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\r\n        headers: {'Content-type': 'multipart/form-data'}\r\n    }).then(responseBody),\r\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\r\n        headers: {'Content-type': 'multipart/form-data'}\r\n    }).then(responseBody)\r\n}\r\n\r\nfunction createFormData(item: any) {\r\n    let formData = new FormData();\r\n    for (const key in item) {\r\n        formData.append(key, item[key])\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst Admin = {\r\n    createProduct: (product: any) => requests.postForm('products', createFormData(product)),\r\n    updateProduct: (product: any) => requests.putForm('products', createFormData(product)),\r\n    deleteProduct: (id: number) => requests.delete(`products/${id}`)\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorised'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders', values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments,\r\n    Admin\r\n}\r\n\r\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function ABoutPage() {\r\n    const [validationErrors, setValidationErros] = useState<string[]>([]);\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this'))\r\n            .catch(error => setValidationErros(error));\r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>\r\n                Errors for testing purposes\r\n            </Typography><ButtonGroup fullWidth>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error()\r\n                .catch(error => console.log(error))}>\r\n                    Test 400 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error()\r\n                .catch(error => console.log(error))}>\r\n                    Test 401 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error()\r\n                    .catch(error => console.log(error))}>\r\n                    Test 404 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error()\r\n                   .catch(error => console.log(error))}>\r\n                    Test 500 Error\r\n                </Button>\r\n                <Button variant='contained' onClick={getValidationError}>\r\n                    Test Validation Error\r\n                </Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    )\r\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\r\nimport Box from \"@mui/system/Box\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}","import {\r\n    Card, Button, CardActions, CardContent, CardMedia,\r\n    Typography, CardHeader, Avatar\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Link } from \"react-router-dom\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\">\r\n                    {currencyFormat(product.price)} / {product.type}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\r\n                    size=\"small\"\r\n                >\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n   Card,\r\n   CardActions,\r\n   CardContent,\r\n   CardHeader,\r\n   Grid,\r\n   Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n   return (\r\n       <Grid item xs component={Card}>\r\n           <CardHeader\r\n               avatar={\r\n                   <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n               }\r\n               title={\r\n                   <Skeleton\r\n                       animation=\"wave\"\r\n                       height={10}\r\n                       width=\"80%\"\r\n                       style={{ marginBottom: 6 }}\r\n                   />\r\n               }\r\n           />\r\n           <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n           <CardContent>\r\n               <>\r\n                   <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                   <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n               </>\r\n           </CardContent>\r\n           <CardActions>\r\n               <>\r\n                   <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                   <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n               </>\r\n           </CardActions>\r\n       </Grid>\r\n   )\r\n}","import { Grid } from \"@mui/material\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\"\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const {productsLoaded} = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid key={product.id} item xs={4}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : <ProductCard product={product} />}\r\n                    \r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n   const {productParams} = useAppSelector(state => state.catalog);\r\n   const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n   const dispatch = useAppDispatch();\r\n\r\n   const debouncedSearch = debounce((event: any) =>{\r\n      dispatch(setProductParams({searchTerm: event.target.value}));\r\n   }, 1000)\r\n   return (\r\n      <TextField\r\n         label='Search products'\r\n         variant='outlined'\r\n         fullWidth\r\n         value={searchTerm || ''}\r\n         onChange={(event: any) => {\r\n            setSearchTerm(event.target.value);\r\n            debouncedSearch(event);\r\n         }}\r\n      />\r\n   );\r\n\r\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props {\r\n   options: any[];\r\n   onChange: (event: any) => void;\r\n   selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\r\n   return (\r\n      <FormControl component=\"fieldset\">\r\n         <RadioGroup onChange={onChange} value={selectedValue}>\r\n            {options.map(({ value, label }) => (\r\n               <FormControlLabel\r\n                  key={value} value={value}\r\n                  control={<Radio />} label={label}\r\n               />\r\n            ))}\r\n         </RadioGroup>\r\n      </FormControl>\r\n   )\r\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n   items: string[];\r\n   checked?: string[];\r\n   onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckBoxButtons({ items, checked, onChange }: Props) {\r\n   const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n   function handleChecked(value: string) {\r\n      const currentIndex = checkedItems.findIndex(item => item === value);\r\n      let newChecked: string[] = [];\r\n      if (currentIndex === - 1) newChecked = [...checkedItems, value];\r\n      else newChecked = checkedItems.filter(item => item !== value);\r\n      setCheckedItems(newChecked);\r\n      onChange(newChecked);\r\n   }\r\n   return (\r\n      <FormGroup>\r\n         {items.map(item => (\r\n            <FormControlLabel\r\n               control={<Checkbox\r\n                  checked={checkedItems.indexOf(item) !== -1}\r\n                  onClick={() => handleChecked(item)}\r\n               />}\r\n               label={item} key={item}\r\n            />\r\n         ))}\r\n      </FormGroup>\r\n   )\r\n}","import { Box, Typography, Pagination } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n   metaData: MetaData;\r\n   onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props) {\r\n   const {currentPage, totalCount, totalPages, pageSize} = metaData;\r\n   const [pageNumber, setPageNumber] = useState(currentPage);\r\n\r\n   function handlePageChange(page: number) {\r\n      setPageNumber(page);\r\n      onPageChange(page);\r\n   }\r\n   return (\r\n      <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n          <Typography>\r\n            Displaying {(currentPage - 1) * pageSize + 1}-\r\n            {currentPage * pageSize > totalCount \r\n               ? totalCount \r\n               : currentPage * pageSize} of {totalCount} items\r\n          </Typography>\r\n          <Pagination\r\n            color='secondary'\r\n            size='large'\r\n            count={totalPages}\r\n            page={pageNumber}\r\n            onChange={(e, page) => handlePageChange(page)}\r\n          />\r\n        </Box>\r\n   )\r\n}","import { useEffect } from \"react\";\r\nimport { productSelectors, fetchProductsAsync, fetchFilters } from \"../../features/catalog/catalogSlice\";\r\nimport { useAppSelector, useAppDispatch } from \"../store/configureStore\";\r\n\r\nexport default function useProducts() {\r\n   const products = useAppSelector(productSelectors.selectAll);\r\n   const { productsLoaded, filtersLoaded, brands, types, metaData} \r\n   = useAppSelector(state => state.catalog);\r\n   const dispatch = useAppDispatch();\r\n \r\n   useEffect(() => {\r\n     if (!productsLoaded) dispatch(fetchProductsAsync());\r\n   }, [productsLoaded, dispatch]);\r\n   useEffect(() => {\r\n     if (!filtersLoaded) dispatch(fetchFilters());\r\n   }, [dispatch, filtersLoaded]);\r\n\r\n   return {\r\n      products,\r\n      productsLoaded,\r\n      filtersLoaded,\r\n      brands,\r\n      types,\r\n      metaData\r\n   }\r\n}","import {\r\n  Grid, Paper} from \"@mui/material\";\r\nimport classes from './Catalog.module.css';\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport {\r\n  setPageNumber, setProductParams\r\n} from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport CheckBoxButtons from \"../../app/components/CheckBoxButtons\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\n\r\nconst sortOptions = [\r\n  { value: 'name', label: 'Alphabetical' },\r\n  { value: 'priceDesc', label: 'Price - High to low' },\r\n  { value: 'price', label: 'Price - Low to high' }\r\n]\r\n\r\nexport default function Catalog() {\r\n  const { \r\n    products, brands, types, filtersLoaded, metaData\r\n  } = useProducts();\r\n  const {productParams} = useAppSelector(state => state.catalog);\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n\r\n  return (\r\n    <Grid container columnSpacing={4}>\r\n      <Grid item xs={3}>\r\n        <Paper sx={{ mb: 2 }}>\r\n          <ProductSearch />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <RadioButtonGroup\r\n            selectedValue={productParams.orderBy}\r\n            options={sortOptions}\r\n            onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n          />\r\n\r\n          <Paper sx={{ mb: 2, p: 2 }} className={classes.noBorder}>\r\n            <CheckBoxButtons\r\n              items={brands}\r\n              checked={productParams.brands}\r\n              onChange={(items: string[]) => dispatch(setProductParams({\r\n                brands: items\r\n              }))}\r\n            />\r\n          </Paper>\r\n          <Paper sx={{ mb: 2, p: 2 }} className={classes.noBorder}>\r\n            <CheckBoxButtons\r\n              items={types}\r\n              checked={productParams.types}\r\n              onChange={(items: string[]) => dispatch(setProductParams({\r\n                types: items\r\n              }))}\r\n            />\r\n          </Paper>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <ProductList products={products} />\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n      <Grid item xs={9} sx={{ mb: 2 }}>\r\n        {metaData &&\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) => dispatch(setPageNumber({\r\n              pageNumber: page\r\n            }))}\r\n          />\r\n        }\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import { Container, Paper, Typography, Divider, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography variant='h3' gutterBottom>\r\n                OOps - we could not find find what you are looking for\r\n            </Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n    }","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{ id: string }>();\r\n    \r\n    const product = useAppSelector(state => productSelectors.selectById( state, id));\r\n    const {status: productStatus} = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)));\r\n    }, [id, item, dispatch, product]);\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(parseInt(event.target.value));\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}));\r\n            \r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}));\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\r\n    if (!product) return <NotFound />\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>\r\n                    {product.name}\r\n                </Typography>\r\n                <Divider sx={{mb: 2}}/>\r\n                <Typography variant='h4' color='secondary'>\r\n                    ${(product.price / 100).toFixed(2)}\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={(item?.quantity === quantity) || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{height: '55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Cart'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const { data, title } = useAppSelector(state => state.counter);\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>\r\n                {title}\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n                The data is: {data}\r\n            </Typography>\r\n            <ButtonGroup>\r\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>\r\n                    Decrement\r\n                </Button>\r\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>\r\n                    Increment\r\n                </Button>\r\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>\r\n                    Increment by 5\r\n                </Button>\r\n            </ButtonGroup>\r\n        </>\r\n    )\r\n}","import { Box, Typography } from \"@mui/material\";\r\nimport Slider from \"react-slick\";\r\nimport classes from './HomePage.module.css';\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"images/hero1.jpg\" alt=\"hero\" className={classes.carouselImg} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero2.jpg\" alt=\"hero\" className={classes.carouselImg} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero3.jpg\" alt=\"hero\" className={classes.carouselImg} />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }} >\r\n                <Typography variant='h1'>Welcome to the store</Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"../../features/account/accountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\n\r\nexport default function SignedInMenu() {\r\n   const dispatch = useAppDispatch();\r\n   const { user } = useAppSelector(state => state.account);\r\n\r\n   const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n   const open = Boolean(anchorEl);\r\n   const handleClick = (event: any) => {\r\n      setAnchorEl(event.currentTarget);\r\n   };\r\n   const handleClose = () => {\r\n      setAnchorEl(null);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Button\r\n            color='inherit'\r\n            onClick={handleClick}\r\n            sx={{ typography: 'h6' }}\r\n         >\r\n            {user?.email}\r\n         </Button>\r\n         <Menu\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={Fade}\r\n         >\r\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem component={Link} to='/orders' onClick={handleClose}>\r\n               My orders\r\n            </MenuItem>\r\n            <MenuItem onClick={() => {\r\n               dispatch(signOut());\r\n               dispatch(clearBasket());\r\n            }}>Logout</MenuItem>\r\n         </Menu>\r\n      </>\r\n   );\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Typography\r\n                        variant='h6' component={NavLink}\r\n                        to='/'\r\n                        exact\r\n                        sx={navStyles}\r\n                    >\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {user && user.roles?.includes('Admin') &&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={'inventory'}\r\n                            sx={navStyles}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n\r\n                </List>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }} >\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const {state} = useLocation<any>();\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                <Divider />              \r\n                <Typography>{state.error.detail || 'Internal Server Error'}</Typography>                \r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({subtotal}: Props) {\r\n   const {basket} = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n       subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) || 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n   items: BasketItem[];\r\n   isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n   const { status } = useAppSelector(state => state.basket);\r\n   const dispatch = useAppDispatch();\r\n   return (\r\n      <TableContainer component={Paper} variant={'outlined'}>\r\n         <Table sx={{ minWidth: 650 }}>\r\n            <TableHead>\r\n               <TableRow>\r\n                  <TableCell>Product</TableCell>\r\n                  <TableCell align=\"right\">Price</TableCell>\r\n                  <TableCell align=\"center\">Quantity</TableCell>\r\n                  <TableCell align=\"right\">Subtotal</TableCell>\r\n                  {isBasket && <TableCell align=\"right\"></TableCell>}\r\n               </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n               {items.map(item => (\r\n                  <TableRow\r\n                     key={item.productId}\r\n                     sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                     <TableCell component=\"th\" scope=\"row\">\r\n                        <Box display='flex' align-items='center'>\r\n                           <img\r\n                              src={item.pictureUrl} alt={item.name}\r\n                              style={{ height: 50, marginRight: 20 }}\r\n                           />\r\n                           <span>{item.name}</span>\r\n                        </Box>\r\n\r\n                     </TableCell>\r\n                     <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                     <TableCell align=\"center\">\r\n                        {isBasket &&\r\n                           <LoadingButton\r\n                              loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                              onClick={() => dispatch(removeBasketItemAsync({\r\n                                 productId: item.productId, quantity: 1, name: 'rem'\r\n                              }))}\r\n                              color='error'\r\n                           >\r\n                              <Remove />\r\n                           </LoadingButton>\r\n                        }\r\n                        {item.quantity}\r\n                        {isBasket && <LoadingButton\r\n                           loading={status === 'pendingAddItem' + item.productId}\r\n                           onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                           color='secondary'\r\n                        >\r\n                           <Add />\r\n                        </LoadingButton>}\r\n                     </TableCell>\r\n                     <TableCell align=\"right\">\r\n                        ${((item.price / 100) * item.quantity).toFixed(2)}\r\n                     </TableCell>\r\n                     {isBasket &&\r\n                        <TableCell align=\"right\">\r\n                           <LoadingButton\r\n                              loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                              onClick={() => dispatch(removeBasketItemAsync({\r\n                                 productId: item.productId, quantity: item.quantity, name: 'del'\r\n                              }))}\r\n                              color='error'\r\n                           >\r\n                              <Delete />\r\n                           </LoadingButton>\r\n                        </TableCell>}\r\n                  </TableRow>\r\n               ))}\r\n            </TableBody>\r\n         </Table>\r\n      </TableContainer>\r\n   )\r\n}","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Link } from 'react-router-dom'\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nexport default function BasketPage() {\r\n   const { basket } = useAppSelector(state => state.basket);\r\n\r\n   if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n   return (\r\n      <>\r\n         <BasketTable items={basket.items} />\r\n         <Grid container>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={6}>\r\n               <BasketSummary />\r\n               <Button\r\n                  component={Link}\r\n                  to='/checkout'\r\n                  variant='contained'\r\n                  size='large'\r\n                  fullWidth\r\n               >\r\n                  Checkout\r\n               </Button>\r\n            </Grid>\r\n         </Grid>\r\n      </>\r\n   )\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Login() {\r\n   const history = useHistory();\r\n   const location = useLocation<any>();\r\n   const dispatch = useAppDispatch();\r\n\r\n   const { register, handleSubmit, formState: { \r\n      isSubmitting, errors, isValid\r\n   }} = useForm({mode: 'all'});\r\n\r\n   async function submitForm(data: FieldValues) {\r\n      try {\r\n         await dispatch(signInUser(data)); \r\n         history.push(location.state?.from?.pathname || '/catalog');         \r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n      \r\n   }\r\n\r\n   return (\r\n      <ThemeProvider theme={theme}>\r\n         <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{\r\n               display: 'flex', flexDirection: 'column',\r\n               alignItems: 'center', p: 4\r\n            }}\r\n         >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n               <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n               Sign in\r\n            </Typography>\r\n            <Box\r\n               component=\"form\"\r\n               onSubmit={handleSubmit(submitForm)}\r\n               noValidate sx={{ mt: 1 }}\r\n            >\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  autoFocus\r\n                  {...register('username', {\r\n                     required: 'Username is required'\r\n                  })}\r\n                  error={!!errors.username} // !! casts to Boolean\r\n                  helperText={errors?.username?.message}\r\n               />\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  {...register('password', {\r\n                     required: 'Password is required'\r\n                  })}\r\n                  // replaces name=\"password\", but does more...\r\n                  // ...onChange, see react-hook-form docs\r\n                  error={!!errors.password} // !! casts to Boolean\r\n                  helperText={errors?.password?.message}\r\n               />\r\n               <LoadingButton\r\n                  disabled={!isValid}\r\n                  loading={isSubmitting}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n               >\r\n                  Sign In\r\n               </LoadingButton>\r\n               <Grid container>\r\n                  <Grid item>\r\n                     <Link to='/register'>\r\n                        {\"Don't have an account? Sign Up\"}\r\n                     </Link>\r\n                  </Grid>\r\n               </Grid>\r\n            </Box>\r\n         </Container>\r\n      </ThemeProvider>\r\n   );\r\n}\r\n","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Register() {\r\n   const history = useHistory();\r\n   const { register, handleSubmit, setError, formState: {\r\n      isSubmitting, errors, isValid\r\n   } } = useForm({ mode: 'all' });\r\n\r\n   function handleApiErrors(errors: any) {\r\n      if (errors) {\r\n         errors.forEach((error: string) => {\r\n            if (error.includes('Password')) {\r\n               setError('password', {message: error});\r\n            } else if (error.includes('Email')) {\r\n               setError('email', {message: error});\r\n            } else if (error.includes('Username')) {\r\n               setError('username', {message: error});\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   return (\r\n      <ThemeProvider theme={theme}>\r\n         <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{\r\n               display: 'flex', flexDirection: 'column',\r\n               alignItems: 'center', p: 4\r\n            }}\r\n         >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n               <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n               Register\r\n            </Typography>\r\n            <Box\r\n               component=\"form\"\r\n               onSubmit={handleSubmit((data) =>\r\n                  agent.Account.register(data)\r\n                     .then(() => {\r\n                        toast.success('Registration successful - you can now log in');\r\n                        history.push('/login')\r\n                     })\r\n                     .catch((error => handleApiErrors(error))))\r\n               }\r\n               noValidate sx={{ mt: 1 }}\r\n            >\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  autoFocus\r\n                  {...register('username', {\r\n                     required: 'Username is required'\r\n                  })}\r\n                  error={!!errors.username} // !! casts to Boolean\r\n                  helperText={errors?.username?.message}\r\n               />\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  {...register('email', {\r\n                     required: 'Email is required',\r\n                     pattern: {\r\n                        value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                        message: 'Not a valid email address'\r\n                     }\r\n                  })}\r\n                  error={!!errors.email}\r\n                  helperText={errors?.email?.message}\r\n               />\r\n               <TextField\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  {...register('password', {\r\n                     required: 'Password is required',\r\n                     pattern: {\r\n                        value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                        message: 'This password does not meet complexity requirements'\r\n                     }\r\n                  })}\r\n                  error={!!errors.password}\r\n                  helperText={errors?.password?.message}\r\n               />\r\n               <LoadingButton\r\n                  disabled={!isValid}\r\n                  loading={isSubmitting}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n               >\r\n                  Register\r\n               </LoadingButton>\r\n               <Grid container>\r\n                  <Grid item>\r\n                     <Link to='/login'>\r\n                        {\"Already have an account? Sign In\"}\r\n                     </Link>\r\n                  </Grid>\r\n               </Grid>\r\n            </Box>\r\n         </Container>\r\n      </ThemeProvider>\r\n   );\r\n}\r\n","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n   component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n   roles?: string[];\r\n}\r\n\r\nexport default function PrivateRoute({\r\n   component: Component, roles, ...rest\r\n}: Props) {\r\n   const { user } = useAppSelector(state => state.account);\r\n   return (\r\n      <Route {...rest} render={props => {\r\n         if (!user) {\r\n            return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n         }\r\n\r\n         if (roles && !roles?.some(r => user.roles?.includes(r))) {\r\n            toast.error('Not authorised to access this area');\r\n            return <Redirect to={{ pathname: \"/catalog\" }} />\r\n         }\r\n\r\n         return <Component {...props} />\r\n      }}\r\n      />\r\n   );\r\n}\r\n","import { Box, Button, Grid, Typography } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n   order: Order;\r\n   setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n   const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n   return (\r\n      <>\r\n         <Box display='flex' justifyContent='space-between'>\r\n            <Typography sx={{ p: 2 }} gutterBottom variant='h4'>\r\n               Order# {order.id} - {order.orderStatus}\r\n            </Typography>\r\n            <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }}\r\n               size='large' variant='contained'\r\n            >\r\n               Back to orders\r\n            </Button>\r\n         </Box>\r\n         <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n         <Grid container>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={6}>\r\n               <BasketSummary subtotal={subtotal} />\r\n            </Grid>\r\n         </Grid>\r\n      </>\r\n   )\r\n}","import {\r\n   TableContainer, Paper, Table, TableHead,\r\n   TableRow, TableCell, TableBody, Button\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n   const [orders, setOrders] = useState<Order[] | null>(null);\r\n   const [loading, setLoading] = useState(true);\r\n   const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      agent.Orders.list()\r\n         .then(orders => setOrders(orders))\r\n         .catch(error => console.log(error))\r\n         .finally(() => setLoading(false))\r\n   }, [])\r\n\r\n   if (loading) return <LoadingComponent message='Loading orders...' />\r\n\r\n   if (selectedOrderNumber > 0) return (\r\n      <OrderDetailed \r\n          order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n          setSelectedOrder={setSelectedOrderNumber}\r\n      />\r\n  )\r\n\r\n   return (\r\n      <TableContainer component={Paper}>\r\n         <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n               <TableRow>\r\n                  <TableCell>OrderNumber</TableCell>\r\n                  <TableCell align=\"right\">Total</TableCell>\r\n                  <TableCell align=\"right\">Order Date</TableCell>\r\n                  <TableCell align=\"right\">Order Status</TableCell>\r\n                  <TableCell align=\"right\"></TableCell>\r\n               </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n               {orders?.map((order) => (\r\n                  <TableRow\r\n                     key={order.id}\r\n                     sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                     <TableCell component=\"th\" scope=\"row\">\r\n                        {order.id}\r\n                     </TableCell>\r\n                     <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                     <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                     <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                     <TableCell align=\"right\">\r\n                     <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                           View\r\n                        </Button>\r\n                     </TableCell>\r\n                  </TableRow>\r\n               ))}\r\n            </TableBody>\r\n         </Table>\r\n      </TableContainer>\r\n   )\r\n}","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n   label: string;\r\n   multiline?: boolean;\r\n   rows?: number;\r\n   type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n   const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n   return (\r\n      <TextField\r\n         {...props}\r\n         {...field}\r\n         multiline={props.multiline}\r\n         rows={props.rows}\r\n         type={props.type}\r\n         fullWidth\r\n         variant='outlined'\r\n         error={!!fieldState.error}\r\n         helperText={fieldState.error?.message}\r\n      />\r\n   )\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n   label: string;\r\n   disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckBox(props: Props) {\r\n   const { field } = useController({ ...props, defaultValue: false });\r\n   return (\r\n      <FormControlLabel\r\n         control={\r\n            <Checkbox\r\n               {...field}\r\n               checked={field.value}\r\n               color='secondary'\r\n               disabled={props.disabled}\r\n            />\r\n\r\n         }\r\n         label={props.label}\r\n      />\r\n   )\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport AppCheckBox from '../../app/components/AppCheckBox';\r\n\r\nexport default function AddressForm() {\r\n  const { control, formState } = useFormContext();\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <AppTextInput control={control} name='fullName' label='Full name' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address1' label='Address 1' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address2' label='Address 2' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='city' label='City' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='state' label='State' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='zip' label='Zipcode' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='country' label='Country' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppCheckBox \r\n            disabled={!formState.isDirty}\r\n            name='saveAddress' \r\n            label='Save this as the default address'\r\n            control={control}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({\r\n   component: Component, ...props }: Props,\r\n   ref: Ref<unknown>) {\r\n   const elementRef = useRef<any>();\r\n\r\n   useImperativeHandle(ref, () => ({\r\n      focus: () => elementRef.current.focus\r\n   }));\r\n\r\n   return (\r\n      <Component\r\n         onReady={(element: any) => elementRef.current = element}\r\n         {...props}\r\n      />\r\n   )\r\n});","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { StripeInput } from './StripeInput';\r\nimport {\r\n  CardCvcElement, CardExpiryElement, CardNumberElement\r\n} from '@stripe/react-stripe-js';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: { elementError: { [key in StripeElementType]?: string } };\r\n  onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector(state => state.basket);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n        <BasketTable items={basket.items} isBasket={false} />\r\n      }\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n   yup.object({\r\n      fullName: yup.string().required('Full name is required'),\r\n      address1: yup.string().required('Address line 1 is required'),\r\n      address2: yup.string().required('Address line 2 is required'),\r\n      city: yup.string().required('City is a required field'),\r\n      state: yup.string().required('State is a required field'),\r\n      zip: yup.string().required('Zip is a required field'),\r\n      country: yup.string().required('Country is a required field')\r\n   }),\r\n   yup.object(),\r\n   yup.object({\r\n      nameOnCard: yup.string().required()\r\n   })\r\n]\r\n","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [cardState, setCardState] = useState<{\r\n        elementError: { [key in StripeElementType]?: string }\r\n    }>({ elementError: {} });\r\n    // Flagging card input as complete (legal card number etc.)\r\n    const [cardComplete, setCardComplete] = useState<any>({\r\n        cardNumber: false, cardExpiry: false, cardCvc: false\r\n    });\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        });\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({\r\n                        ...methods.getValues(),\r\n                        ...response,\r\n                        saveAddress: false\r\n                    })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // means Stripe is not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({\r\n                    saveAddress, shippingAddress\r\n                });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid;\r\n        } else {\r\n            return !methods.formState.isValid;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack}>\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe('pk_test_51LrekCGJ0Cgm8vTrGQgWn8zYDBcnqySqxgjcPKzKRbuQU6uqpjVwzRec2u4NVSPP0APVfwvr248AVNuBGcWOu4hH00yhe71IL8');\r\n\r\nexport default function CheckoutWrapper() {\r\n   const dispatch = useAppDispatch();\r\n   const [loading, setLoading] = useState(true);\r\n\r\n   useEffect(() => {\r\n      agent.Payments.createPaymentIntent()\r\n         .then(basket => dispatch(setBasket(basket)))\r\n         .catch(error => console.log(error))\r\n         .finally(() => setLoading(false))\r\n   }, [dispatch]);\r\n\r\n   if (loading) return <LoadingComponent message='Loading checkout...' />\r\n\r\n   return (\r\n      <Elements stripe={stripePromise}>\r\n         <CheckoutPage />\r\n      </Elements>\r\n   )\r\n}","import { UploadFile } from '@mui/icons-material';\r\nimport { FormControl, FormHelperText, Typography } from '@mui/material';\r\nimport { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { useController, UseControllerProps } from 'react-hook-form'\r\n\r\ninterface Props extends UseControllerProps { }\r\n\r\nexport default function AppDropzone(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: null });\r\n\r\n    const dzStyles = {\r\n        display: 'flex',\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        alignItems: 'center',\r\n        height: 200,\r\n        width: 500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        acceptedFiles[0] = Object.assign(acceptedFiles[0], \r\n            {preview: URL.createObjectURL(acceptedFiles[0])});\r\n        field.onChange(acceptedFiles[0]);\r\n    }, [field])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <FormControl error={!!fieldState.error} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n                <input {...getInputProps()} />\r\n                <UploadFile sx={{fontSize: '100px'}} />\r\n                <Typography variant='h4'>Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText> \r\n            </FormControl>\r\n        </div>\r\n    )\r\n}","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    items: string[];\r\n}\r\n\r\nexport default function AppSelectList(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n    return (\r\n        <FormControl fullWidth error={!!fieldState.error}>\r\n            <InputLabel>{props.label}</InputLabel>\r\n            <Select\r\n                value={field.value}\r\n                label={props.label}\r\n                onChange={field.onChange}\r\n            >\r\n                {props.items.map((item, index) => (\r\n                    <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                ))}\r\n            </Select>\r\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when('pictureUrl', {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required('Please provide an image')\r\n    })\r\n})","import { Typography, Grid, Paper, Box, Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport AppDropzone from \"../../app/components/AppDropzone\";\r\nimport AppSelectList from \"../../app/components/AppSelectList\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./productValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setProduct } from \"../catalog/catalogSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\ninterface Props {\r\n    product?: Product;\r\n    cancelEdit: () => void;\r\n}\r\n\r\nexport default function ProductForm({ product, cancelEdit }: Props) {\r\n    const { control, reset, handleSubmit, watch, formState: {isDirty, isSubmitting} } = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver<any>(validationSchema)\r\n    });\r\n    const { brands, types } = useProducts();\r\n    const watchFile = watch('file', null);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (product && !watchFile  && !isDirty) reset(product);\r\n        return () => {\r\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\r\n        }\r\n    }, [product, reset, watchFile, isDirty]);\r\n\r\n    async function handleSubmitData(data: FieldValues) {\r\n        try {\r\n            let response: Product;\r\n            if (product) {\r\n                response = await agent.Admin.updateProduct(data);\r\n            } else {\r\n                response = await agent.Admin.createProduct(data);\r\n            }\r\n            dispatch(setProduct(response));\r\n            cancelEdit();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box component={Paper} sx={{ p: 4 }}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n                <Grid container spacing={3}>  \r\n                    <Grid item xs={12} sm={12}>\r\n                        <AppTextInput control={control} name='name' label='Product name' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList items={brands} control={control} name='brand' label='Brand' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList items={types} control={control} name='type' label='Type' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput type='number' control={control} name='price' label='Price' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput type='number' control={control} name='quantityInStock' label='Quantity in Stock' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <AppTextInput multiline={true} rows={4} control={control} name='description' label='Description' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n                            <AppDropzone control={control} name='file' />\r\n                            {watchFile ? (\r\n                                <img src={watchFile.preview} alt='preview' style={{maxHeight: 200}} />\r\n                            ) : (\r\n                                <img src={product?.pictureUrl} alt={product?.name} style={{maxHeight: 200}} />\r\n                            )}\r\n                        </Box>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\r\n                    <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\r\n                    <LoadingButton loading={isSubmitting} type='submit' variant='contained' color='success'>Submit</LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}","import { Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\r\nimport { useState } from \"react\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nexport default function Inventory() {\r\n    const { products, metaData } = useProducts();\r\n    const dispatch = useAppDispatch();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [target, setTarget] = useState(0);\r\n\r\n    function handleSelectProduct(product: Product) {\r\n        setSelectedProduct(product);\r\n        setEditMode(true);\r\n    }\r\n\r\n    function handleDeleteProduct(id: number) {\r\n        setLoading(true);\r\n        setTarget(id);\r\n        agent.Admin.deleteProduct(id)\r\n            .then(() => dispatch(removeProduct(id)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }\r\n\r\n    function cancelEdit() {\r\n        if (selectedProduct) setSelectedProduct(undefined);\r\n        setEditMode(false);\r\n    }\r\n\r\n    if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\r\n                <Button sx={{ m: 2 }} size='large' variant='contained'\r\n                    onClick={() => setEditMode(true)}\r\n                >Create\r\n                </Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>#</TableCell>\r\n                            <TableCell align=\"left\">Product</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">Brand</TableCell>\r\n                            <TableCell align=\"center\">Quantity</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products.map((product) => (\r\n                            <TableRow\r\n                                key={product.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {product.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\r\n                                        <span>{product.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{currencyFormat(product.price)}</TableCell>\r\n                                <TableCell align=\"center\">{product.type}</TableCell>\r\n                                <TableCell align=\"center\">{product.brand}</TableCell>\r\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button\r\n                                        onClick={() => handleSelectProduct(product)}\r\n                                        startIcon={<Edit />}\r\n                                    />\r\n                                    <LoadingButton \r\n                                        loading={loading && target === product.id} \r\n                                        startIcon={<Delete />} color='error' \r\n                                        onClick={() => handleDeleteProduct(product.id)}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {metaData &&\r\n                <Box sx={{ pt: 2 }}>\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n                    />\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n}","import { Container, createTheme, CssBaseline } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AboutPage from \"../../features/about/AboutPage\";\r\nimport Catalog from \"../../features/catalog/Catalog\";\r\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\r\nimport ContactPage from \"../../features/contact/ContactPage\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport Header from \"./Header\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ServerError from \"../errors/ServerError\";\r\nimport NotFound from \"../errors/NotFound\";\r\nimport BasketPage from \"../../features/basket/BasketPage\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport { useAppDispatch } from \"../store/configureStore\";\r\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\r\nimport Login from \"../../features/account/Login\";\r\nimport Register from \"../../features/account/Register\";\r\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Orders from \"../../features/orders/Orders\";\r\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\r\nimport Inventory from \"../../features/admin/Inventory\";\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const initApp = useCallback(async () => {\r\n    try {\r\n      await dispatch(fetchCurrentUser());\r\n      await dispatch(fetchBasketAsync());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    initApp().then(() => setLoading(false));\r\n  }, [initApp])\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const paletteType = darkMode ? 'dark' : 'light';\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: paletteType,\r\n      background: {\r\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\r\n      }\r\n    }\r\n  })\r\n\r\n  function handleThemeChange() {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  if (loading) return <LoadingComponent message='Initialising app...' />\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <CssBaseline />\r\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\r\n      <Route exact path='/' component={HomePage} />\r\n      {/* Below, a Route taking a regular expression, to evaluate paths */}\r\n      <Route path={'/(.+)'} render={() => (\r\n        <Container sx={{ mt: 4 }}>\r\n          <Switch>\r\n            <Route exact path='/catalog' component={Catalog} />\r\n            <Route path='/catalog/:id' component={ProductDetails} />\r\n            <Route path='/about' component={AboutPage} />\r\n            <Route path='/contact' component={ContactPage} />\r\n            <Route path='/server-error' component={ServerError} />\r\n            <Route path='/basket' component={BasketPage} />\r\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\r\n            <PrivateRoute path='/orders' component={Orders} />\r\n            <PrivateRoute roles={['Admin']} path='/inventory' component={Inventory} />\r\n            <Route path='/login' component={Login} />\r\n            <Route path='/register' component={Register} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Container>\r\n      )\r\n      } />\r\n\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css'\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { store } from './app/store/configureStore';\r\nimport { Provider } from 'react-redux';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n"],"sourceRoot":""}